%% 
% Script that shows the performance of the expectation-maximization (EM) 
% algorithm for parameter estimation and the Viterbi algorithm for optimal
% hidden state estimation applied to Autoregressive Hidden Markov Models 
% (ARHMM) given a set of univariate observations (i.e. a time series of 
% duration N), number of states/modes (K) and autoregressive model order (p). 
% Author : Carlos Loza
%
% The example and code are based on the algorithm proposed by Penny and 
% Roberts in the manuscript "Dynamic Models for Nonstationary Signal 
% Segmentation"
%
% Methodology:
% ------------
% 1. Synthetic data is generated by concatenating three sinusoids at 
% different central frequencies (10 Hz, 20 Hz, 30 Hz). Each sinusoid lasts
% one second at a sampling frequency of 100 Hz
% 2. Zero-mean gaussian noise is added to the synthetic time series
% 3. ARHMM parameters are estimated (autoregressive coefficients per state, 
% observation noise standard deviation per state, initial state probabilities, 
% and state transition matrix) via the EM algorithm (forward-backwards 
% implementation)
% 4. The optimal, most likely state sequence is retrieved via the Viterbi
% algorithm
% 5. Results are shown as plots

clearvars
close all
clc

p = 8;                  % Autoregressive model order (same for all states)
K = 3;                  % Number of components/modes/states of ARHMM

rng(34)                 % For reproducibility

%% Generate noisy synthetic data
Fs = 100;               % Sampling frequency
x = zeros(1, 3*Fs);
t = 1/Fs:1/Fs:3;
for i = 1:K
    t_aux = t(Fs*(i - 1) + 1:Fs*i);
    x(Fs*(i - 1) + 1:Fs*i) = sin(2*pi*10*i*t_aux);
end
% Add zero-mean noise (0.1 standard deviation)
x = x + 0.1*randn(size(x));

%% Estimate model parameters
% Initial condition for transition matrix, the remaining initial values are
% provided by a Kalman Filter Autoregressive model of order p.
A = [0.98 0.01 0.01;
    0.01 0.98 0.01;
    0.01 0.01 0.98];
ARHMModel = ARHMMLearning(x, K, 'p', p, 'A', A);
%% Optimal state sequence
[z, LogLike] = ARHMMViterbi(x, ARHMModel);

%% Plot results
figure
subplot(2, 1, 1)
plot(t, x)
ylabel('Observations (x)')
xlabel('n')
subplot(2, 1, 2)
plot(t, z)
ylabel('State (z)')
xlabel('n')
ylim([0 K+1])

plotPSD_ARHMM(ARHMModel, Fs)